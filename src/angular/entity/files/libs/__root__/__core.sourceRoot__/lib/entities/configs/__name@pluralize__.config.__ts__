import { Injectable } from '@angular/core';
import { plainToClass } from 'class-transformer';
import { IRestProviderOptions, PaginationMeta, ProviderActionEnum } from 'ngx-repository';
import { <%= classify(name) %> } from '../models/<%= name %>';

export const default<%= classify(pluralize(name)) %>Config: IRestProviderOptions <<%= classify(name) %>> = {
  name: '<%= decamelize(camelize(name)) %>',
  pluralName: '<%= decamelize(camelize(pluralize(name))) %>',
  autoload: true,
  paginationMeta: {
    perPage: 5
  },
  actionOptions: {
    responseData: (data: any, action: ProviderActionEnum) => {
      if (action === ProviderActionEnum.Delete) {
        return true;
      } else {
        if (action === ProviderActionEnum.LoadAll) {
          return plainToClass(<%= classify(name) %>, data.body.<%= camelize(pluralize(name)) %>);
        } else {
          return plainToClass(<%= classify(name) %>, data.body.<%= camelize(name) %>);
        }
      }
    },
    responsePaginationMeta: (data: any, action: ProviderActionEnum): PaginationMeta => {
      return { totalResults: data.body.meta.totalResults, perPage: undefined };
    }
  },
  restOptions: {
    limitQueryParam: 'per_page',
    pageQueryParam: 'cur_page',
    searchTextQueryParam: 'q'
  }
};
export const <%= snakecase(pluralize(name), true) %>_CONFIG_TOKEN = '<%= classify(pluralize(name)) %>Config';
