import { Injectable } from '@angular/core';
import { plainToClass } from 'class-transformer';
import { IRestProviderOptions, PaginationMeta, ProviderActionEnum } from 'ngx-repository';
import { <%= classify(name) %> } from '../models/<%= name %>';

@Injectable()
export class <%= classify(pluralize(name)) %>Config implements IRestProviderOptions <<%= classify(name) %>> {
  name = '<%= name %>';
  pluralName = '<%= pluralize(name) %>';
  autoload = true;
  paginationMeta = {
    perPage: 5
  };
  actionOptions = {
    responseData: (data: any, action: ProviderActionEnum) => {
      if (action === ProviderActionEnum.Delete) {
        return true;
      } else {
        if (action === ProviderActionEnum.LoadAll) {
          return plainToClass(<%= classify(name) %>, data.body.<%= camelize(pluralize(name)) %>);
        } else {
          return plainToClass(<%= classify(name) %>, data.body.<%= camelize(name) %>);
        }
      }
    },
    responsePaginationMeta: (data: any, action: ProviderActionEnum): PaginationMeta => {
      return { totalResults: data.body.meta.totalResults, perPage: undefined };
    }
  };
  restOptions = {
    limitQueryParam: 'per_page',
    pageQueryParam: 'cur_page',
    searchTextQueryParam: 'q'
  };
  constructor() { }
}
